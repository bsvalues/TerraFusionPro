/**
 * URAR + AI Assistant Page
 * This page combines official URAR forms with AI-powered insights
 */
import { useEffect, useState } from "react";
import { useLocation } from "wouter";
import { Button } from "@/components/ui/button";
import { UrarFormAssistant } from "@/components/UrarFormAssistant";
import { Badge } from "@/components/ui/badge";
import {
  ChevronLeft,
  Save,
  Download,
  Printer,
  Share2,
  Globe,
  Clock,
  AlertTriangle,
} from "lucide-react";
import { useToast } from "@/hooks/use-toast";

interface UrarPageProps {
  propertyId?: number;
}

const UrarPage = ({ propertyId = 1001 }: UrarPageProps) => {
  const [_, setLocation] = useLocation();
  const { toast } = useToast();

  // State for form data and insights
  const [formData, setFormData] = useState({
    propertyId,
    address: "123 Main Street, Anytown, USA",
    propertyType: "Single Family",
    yearBuilt: 1985,
    sqft: 2450,
    bedrooms: 4,
    bathrooms: 2.5,
    lotSize: 0.25,
    appraisalDate: new Date().toISOString().split("T")[0],
    appraisalValue: 425000,
  });

  const [aiInsights, setAiInsights] = useState<Record<string, any>>({});
  const [isSaving, setIsSaving] = useState(false);
  const [isExporting, setIsExporting] = useState(false);

  useEffect(() => {
    console.log("UrarPage mounted with propertyId:", propertyId);
  }, [propertyId]);

  // Handle insights generated by the AI assistant
  const handleInsightsGenerated = (insights: any) => {
    console.log("Received AI insights:", insights);
    setAiInsights(insights);
  };

  // Simulate saving a form
  const handleSave = () => {
    setIsSaving(true);
    // Simulate API call
    setTimeout(() => {
      setIsSaving(false);
      toast({
        title: "URAR Form Saved",
        description: "Your form has been saved successfully.",
      });
    }, 1000);
  };

  // Simulate exporting a form
  const handleExport = () => {
    setIsExporting(true);
    // Simulate API call
    setTimeout(() => {
      setIsExporting(false);
      toast({
        title: "URAR Form Exported",
        description: "Your form has been exported successfully.",
      });
    }, 1000);
  };

  return (
    <div className="flex flex-col h-screen">
      {/* Header */}
      <header className="p-4 border-b bg-white flex items-center justify-between">
        <div className="flex items-center gap-4">
          <Button variant="outline" size="sm" onClick={() => setLocation("/")}>
            <ChevronLeft className="h-4 w-4 mr-2" />
            Back
          </Button>

          <div>
            <h1 className="text-xl font-semibold">URAR + AI Assistant</h1>
            <div className="flex items-center text-sm text-muted-foreground gap-4">
              <span className="flex items-center">
                <Globe className="h-3 w-3 mr-1" />
                {formData.address}
              </span>
              <span className="flex items-center">
                <Clock className="h-3 w-3 mr-1" />
                Last edited: {new Date().toLocaleDateString()}
              </span>
            </div>
          </div>
        </div>

        <div className="flex items-center gap-2">
          <Button variant="outline" size="sm" onClick={handleExport} disabled={isExporting}>
            <Download className="h-4 w-4 mr-2" />
            Export
          </Button>
          <Button variant="outline" size="sm" onClick={() => {}}>
            <Printer className="h-4 w-4 mr-2" />
            Print
          </Button>
          <Button variant="outline" size="sm" onClick={() => {}}>
            <Share2 className="h-4 w-4 mr-2" />
            Share
          </Button>
          <Button size="sm" onClick={handleSave} disabled={isSaving}>
            <Save className="h-4 w-4 mr-2" />
            Save
          </Button>
        </div>
      </header>

      {/* Main content */}
      <div className="flex-1 flex overflow-hidden">
        {/* URAR Form */}
        <div className="flex-1 overflow-auto p-4 border-r">
          <div className="bg-white rounded-md border h-full overflow-auto flex flex-col">
            <div className="p-4 bg-muted border-b flex items-center justify-between">
              <div className="flex items-center">
                <Badge variant="outline" className="mr-2">
                  Official URAR Form
                </Badge>
                <span className="text-sm text-muted-foreground">
                  This form is compliant with all legal regulations
                </span>
              </div>
              <Badge variant="secondary">Read-only</Badge>
            </div>

            <div className="flex-1 overflow-auto p-6">
              {/* Simulated URAR Form */}
              <div className="border border-dashed rounded-md p-12 h-full bg-white">
                <h2 className="text-2xl font-semibold text-center mb-8">
                  Uniform Residential Appraisal Report
                </h2>
                <div className="grid grid-cols-2 gap-6">
                  <div className="space-y-6">
                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Property Address</div>
                      <div className="text-md">{formData.address}</div>
                    </div>

                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Property Type</div>
                      <div className="text-md">{formData.propertyType}</div>
                    </div>

                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Year Built</div>
                      <div className="text-md">{formData.yearBuilt}</div>
                    </div>

                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Gross Living Area</div>
                      <div className="text-md">{formData.sqft} sq ft</div>
                    </div>

                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Bedrooms / Bathrooms</div>
                      <div className="text-md">
                        {formData.bedrooms} / {formData.bathrooms}
                      </div>
                    </div>
                  </div>

                  <div className="space-y-6">
                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Appraisal Date</div>
                      <div className="text-md">
                        {new Date(formData.appraisalDate).toLocaleDateString()}
                      </div>
                    </div>

                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Appraised Value</div>
                      <div className="text-md">${formData.appraisalValue.toLocaleString()}</div>
                    </div>

                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Lot Size</div>
                      <div className="text-md">{formData.lotSize} acres</div>
                    </div>

                    <div className="border-b pb-2">
                      <div className="text-sm font-medium mb-1">Property Condition</div>
                      <div className="text-md">
                        {aiInsights.condition
                          ? `${aiInsights.condition.condition_category.charAt(0).toUpperCase() + aiInsights.condition.condition_category.slice(1)} (${aiInsights.condition.condition_score.toFixed(1)}/5.0)`
                          : "Not assessed"}
                      </div>
                    </div>

                    {aiInsights.condition && (
                      <div className="border-b pb-2">
                        <div className="text-sm font-medium mb-1">AI Assessment Insights</div>
                        <div className="text-sm">
                          <div className="text-xs text-muted-foreground">Key strengths:</div>
                          <div className="text-sm">
                            {aiInsights.condition.key_strengths.join(", ")}
                          </div>

                          {aiInsights.condition.key_concerns.length > 0 && (
                            <>
                              <div className="text-xs text-muted-foreground mt-1">
                                Key concerns:
                              </div>
                              <div className="text-sm">
                                {aiInsights.condition.key_concerns.join(", ")}
                              </div>
                            </>
                          )}
                        </div>
                      </div>
                    )}
                  </div>
                </div>

                <div className="mt-12 text-center text-sm text-muted-foreground">
                  This is a simulated URAR form for demonstration purposes.
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* AI Assistant Panel */}
        <div className="w-1/3 overflow-hidden">
          <UrarFormAssistant
            propertyId={propertyId}
            formData={formData}
            onInsightGenerated={handleInsightsGenerated}
          />
        </div>
      </div>
    </div>
  );
};

export default UrarPage;
