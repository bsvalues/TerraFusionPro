Excellent. Let’s go with **CompsGrid → SnapshotViewer drawer integration** first, since it’s the next UX building block.

Once that’s in place, we’ll layer in the diff logic cleanly within that drawer.

---

# 🧱 `SnapshotViewerDrawer` – Slide-In from CompsGrid

## 🧰 Objective  
When a user clicks a row in `<CompsGrid>`, open a **right-hand drawer** showing:
- All known snapshots for the selected property
- Field mapping + push-to-form controls (already built)
- (Later) diffs per snapshot

---

## 📁 File: `components/comps/SnapshotViewerDrawer.tsx`

```tsx
import React from 'react';
import { Transition } from '@headlessui/react';
import { SnapshotViewer } from './SnapshotViewer';

export function SnapshotViewerDrawer({
  addressId,
  isOpen,
  onClose
}: {
  addressId: string | null;
  isOpen: boolean;
  onClose: () => void;
}) {
  return (
    <Transition show={isOpen}>
      <div className="fixed inset-0 flex justify-end z-50">
        {/* Click-off backdrop */}
        <div className="fixed inset-0 bg-black bg-opacity-25" onClick={onClose} />
        {/* Drawer panel */}
        <Transition.Child
          enter="transform transition ease-in-out duration-300"
          enterFrom="translate-x-full"
          enterTo="translate-x-0"
          leave="transform transition ease-in-out duration-200"
          leaveFrom="translate-x-0"
          leaveTo="translate-x-full"
        >
          <div className="w-[450px] bg-white shadow-xl p-4 overflow-y-auto h-full">
            <h2 className="text-lg font-semibold mb-2">Snapshot History</h2>
            {addressId ? <SnapshotViewer addressId={addressId} /> : <p>No property selected.</p>}
          </div>
        </Transition.Child>
      </div>
    </Transition>
  );
}
```

---

## 🧪 Usage in `CompsGrid.tsx`

```tsx
const [drawerOpen, setDrawerOpen] = useState(false);
const [selectedAddressId, setSelectedAddressId] = useState<string | null>(null);

function onRowClick(row) {
  setSelectedAddressId(row.id);
  setDrawerOpen(true);
}

<DataGrid
  rows={results}
  columns={compsColumns}
  onRowClick={onRowClick}
/>

<SnapshotViewerDrawer
  addressId={selectedAddressId}
  isOpen={drawerOpen}
  onClose={() => setDrawerOpen(false)}
/>
```

---

## ✅ What You Get

- Slide-in panel on row click (responsive to map/grid)
- Fully integrated snapshot viewer inside the drawer
- Preps perfectly for snapshot diff view beneath each tile or in a toggle

---

## 🔜 Next: `SnapshotDiff.tsx`

This will be a component you can optionally show inside each `SnapshotTile`, or as a full comparison view between:
- Selected snapshot vs. current CRDT form
- Two snapshots against each other

Want to go ahead with that diff logic next? I’ll build it clean, field-by-field, highlighting changed values.