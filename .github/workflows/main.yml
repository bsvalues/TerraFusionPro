name: TerraFusion CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8 mypy
        pip install -r services/ai_service/requirements.txt
        pip install -r services/data_service/requirements.txt
        pip install -r services/monitoring_service/requirements.txt
        
    - name: Run tests
      run: |
        pytest --cov=./ --cov-report=xml
        
    - name: Run linting
      run: |
        flake8 .
        mypy .
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push AI service
      uses: docker/build-push-action@v4
      with:
        context: ./services/ai_service
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ai-service:latest
        
    - name: Build and push Data service
      uses: docker/build-push-action@v4
      with:
        context: ./services/data_service
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/data-service:latest
        
    - name: Build and push Monitoring service
      uses: docker/build-push-action@v4
      with:
        context: ./services/monitoring_service
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/monitoring-service:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name terrafusion-cluster
        
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/
        kubectl set image deployment/ai-service ai-service=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ai-service:latest
        kubectl set image deployment/data-service data-service=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/data-service:latest
        kubectl set image deployment/monitoring-service monitoring-service=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/monitoring-service:latest 