input {
  beats {
    port => 5044
  }

  tcp {
    port => 5000
    codec => json
  }

  udp {
    port => 5000
    codec => json
  }
}

filter {
  if [container][image][name] =~ /terrafusion/ {
    # Parse application logs
    json {
      source => "message"
      target => "parsed_log"
      skip_on_invalid_json => true
    }

    # Extract structured log info
    if [parsed_log] {
      # Use field values from parsed JSON
      if [parsed_log][level] {
        mutate { 
          add_field => { "log_level" => "%{[parsed_log][level]}" } 
        }
      }
      
      if [parsed_log][message] {
        mutate { 
          add_field => { "log_message" => "%{[parsed_log][message]}" } 
        }
      }

      if [parsed_log][timestamp] {
        date {
          match => [ "[parsed_log][timestamp]", "ISO8601" ]
          target => "@timestamp"
        }
      }
      
      # Add more fields as needed
    }
  }

  # Add application tag
  if [container][image][name] =~ /terrafusion-app/ {
    mutate {
      add_tag => ["terrafusion-application"]
    }
  }
  
  # Add database tag
  if [container][image][name] =~ /postgres/ {
    mutate {
      add_tag => ["database"]
    }
  }
  
  # Add redis tag
  if [container][image][name] =~ /redis/ {
    mutate {
      add_tag => ["cache"]
    }
  }
  
  # Add labels for easy filtering
  mutate {
    add_field => {
      "environment" => "${ENVIRONMENT:production}"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "terrafusion-logs-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "changeme"
  }
  
  # Debug output
  if [log_level] == "debug" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "debug-logs-%{+YYYY.MM.dd}"
    }
  }
  
  # Error output
  if [log_level] == "error" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "error-logs-%{+YYYY.MM.dd}"
    }
  }
}