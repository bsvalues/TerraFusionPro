version: '3.8'

services:
  app:
    build:
      context: .
      target: development
    container_name: terrafusion-app
    ports:
      - "5000:5000"
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/terrafusion
      - REDIS_URL=redis://redis:6379
    restart: unless-stopped
    networks:
      - terrafusion-network

  db:
    image: postgres:latest
    container_name: terrafusion-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=terrafusion
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - terrafusion-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: terrafusion-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - terrafusion-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  terrafusion-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: